name: BB PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

# jobs:
#   run-gleam-and-process-pr:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup Gleam and Process PR
#         uses: 0v00/kmt@master
#         env:
#           TEST_SECRET: ${{ secrets.TEST_SECRET }}
#         with:
#           pr_id: ${{ github.event.pull_request.number }}

jobs:
  run-bb-and-process-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup BB and Process PR
        id: bb_script
        uses: tzafrirben/babashka-docker-action@v1.1
        env:
          TEST_SECRET: ${{ secrets.TEST_SECRET }}
        with:
          bb_url: 'https://raw.githubusercontent.com/0v00/kmt-clj/refs/heads/master/kmt.clj'
          bb_args: ${{ github.event.pull_request.number }}
      - name: Get the bb script output
        run: echo "${{ steps.bb_script.outputs.bb_out }}"
      - name: Create PR Comment
        uses: actions/github-script@v7
        env:
          SCRIPT_OUTPUT: ${{ steps.bb_script.outputs.bb_out }}
        with:
          github-token: ${{ secrets.TEST_SECRET }}
          script: |
            const output = `${{ steps.bb_script.outputs.bb_out }}`;
            const commentIdentifier = 'bb-script-output';

            // Check if a comment with the specified identifier already exists
            const existingComments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const existingComment = existingComments.data.find(
              (comment) => comment.body.includes(`<!-- ${commentIdentifier} -->`)
            );

            if (existingComment) {
              // Update the existing comment
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `<!-- ${commentIdentifier} -->\n${output}`,
              });
            } else {
              // Create a new comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `<!-- ${commentIdentifier} -->\n${output}`,
              });
            }